/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/splash_screen/SplashViewBase.hpp>
#include <touchgfx/Color.hpp>
#include "BitmapDatabase.hpp"

SplashViewBase::SplashViewBase() :
    interaction1Counter(0),
    interaction3Counter(0),
    interaction2EndedCallback(this, &SplashViewBase::interaction2EndedCallbackHandler)
{
    background.setPosition(0, 0, 480, 272);
    background.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    background.setAlpha(95);

    Shadow.setPosition(0, 0, 480, 272);
    Shadow.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));

    logo_supcom.setXY(120, 98);
    logo_supcom.setBitmap(Bitmap(BITMAP_LOGO_SUPCOM_ID));

    Shadow_1.setPosition(0, 0, 480, 272);
    Shadow_1.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));

    add(background);
    add(Shadow);
    add(logo_supcom);
    add(Shadow_1);
}

void SplashViewBase::setupScreen()
{

}

//Handles delays
void SplashViewBase::handleTickEvent()
{
    View::handleTickEvent();
    if(interaction1Counter > 0)
    {
        interaction1Counter--;
        if(interaction1Counter == 0)
        {
            //Interaction2
            //When Interaction1 completed fade Shadow_1
            //Fade Shadow_1 to alpha:0 with CubicIn easing in 1000 ms (60 Ticks)
            Shadow_1.clearFadeAnimationEndedAction();
            Shadow_1.startFadeAnimation(0, 60, EasingEquations::cubicEaseIn);
            Shadow_1.setFadeAnimationEndedAction(interaction2EndedCallback);

            //Interaction3
            //When Interaction1 completed delay
            //Delay for 2000 ms (120 Ticks)
            interaction3Counter = INTERACTION3_DURATION;
        }
    }
    if(interaction3Counter > 0)
    {
        interaction3Counter--;
        if(interaction3Counter == 0)
        {
            //Interaction4
            //When Interaction3 completed change screen to HomeScreen
            //Go to HomeScreen with no screen transition
            application().gotoHomeScreenScreenNoTransition();
        }
    }
}

//Called when the screen is done with transition/load
void SplashViewBase::afterTransition()
{
    //Interaction1
    //When screen is entered delay
    //Delay for 1000 ms (60 Ticks)
    interaction1Counter = INTERACTION1_DURATION;
}

void SplashViewBase::interaction2EndedCallbackHandler(const touchgfx::FadeAnimator<touchgfx::Box>& comp)
{

}
