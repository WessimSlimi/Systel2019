/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/homescreen_screen/HomeScreenViewBase.hpp>
#include "BitmapDatabase.hpp"
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>

HomeScreenViewBase::HomeScreenViewBase() :
    flexButtonCallback(this, &HomeScreenViewBase::flexButtonCallbackHandler)
{
    BackgroundContainer.setPosition(0, 0, 480, 272);

    Background.setBitmap(Bitmap(BITMAP_BLUE_TEXTURES_GREY_WASH_WALL_ID));
    Background.setPosition(0, 0, 480, 272);
    Background.setOffset(0, 0);
    BackgroundContainer.add(Background);

    STLogo1.setXY(0, 222);
    STLogo1.setBitmap(Bitmap(BITMAP_STLOGO_ID));
    BackgroundContainer.add(STLogo1);

    TopBar.setPosition(0, 0, 480, 50);

    box2.setPosition(0, 0, 480, 50);
    box2.setColor(touchgfx::Color::getColorFrom24BitRGB(61, 113, 178));
    TopBar.add(box2);

    supcom1.setXY(330, -9);
    supcom1.setBitmap(Bitmap(BITMAP_SUPCOM_ID));
    TopBar.add(supcom1);

    HomeButton.setBoxWithBorderPosition(0, 0, 188, 50);
    HomeButton.setBorderSize(0);
    HomeButton.setBoxWithBorderColors(touchgfx::Color::getColorFrom24BitRGB(61, 113, 178), touchgfx::Color::getColorFrom24BitRGB(61, 113, 178), touchgfx::Color::getColorFrom24BitRGB(61, 113, 178), touchgfx::Color::getColorFrom24BitRGB(61, 113, 178));
    HomeButton.setIconBitmaps(Bitmap(BITMAP_BLUE_ICONS_HOME_48_ID), Bitmap(BITMAP_BLUE_ICONS_HOME_48_ID));
    HomeButton.setIconXY(0, 0);
    HomeButton.setText(TypedText(T_SINGLEUSEID4));
    HomeButton.setTextPosition(49, 6, 147, 50);
    HomeButton.setTextColors(touchgfx::Color::getColorFrom24BitRGB(63, 62, 69), touchgfx::Color::getColorFrom24BitRGB(7, 7, 8));
    HomeButton.setPosition(7, 0, 147, 50);
    HomeButton.setAction(flexButtonCallback);
    TopBar.add(HomeButton);

    SpeechContainer.setPosition(167, 77, 180, 50);

    SpeechButton.setBoxWithBorderPosition(0, 0, 180, 50);
    SpeechButton.setBorderSize(5);
    SpeechButton.setBoxWithBorderColors(touchgfx::Color::getColorFrom24BitRGB(0, 102, 153), touchgfx::Color::getColorFrom24BitRGB(0, 153, 204), touchgfx::Color::getColorFrom24BitRGB(0, 51, 102), touchgfx::Color::getColorFrom24BitRGB(13, 42, 71));
    SpeechButton.setText(TypedText(T_SINGLEUSEID1));
    SpeechButton.setTextPosition(35, 10, 180, 50);
    SpeechButton.setTextColors(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255), touchgfx::Color::getColorFrom24BitRGB(255, 0, 0));
    SpeechButton.setBitmaps(Bitmap(BITMAP_SPEECHICON_ID), Bitmap(BITMAP_SPEECHICON_ID));
    SpeechButton.setBitmapXY(121, 0);
    SpeechButton.setPosition(0, 0, 180, 50);
    SpeechButton.setAction(flexButtonCallback);
    SpeechContainer.add(SpeechButton);

    AnalogContainer.setPosition(167, 135, 180, 50);

    AnalogButton.setBoxWithBorderPosition(0, 0, 180, 50);
    AnalogButton.setBorderSize(5);
    AnalogButton.setBoxWithBorderColors(touchgfx::Color::getColorFrom24BitRGB(0, 102, 153), touchgfx::Color::getColorFrom24BitRGB(0, 153, 204), touchgfx::Color::getColorFrom24BitRGB(0, 51, 102), touchgfx::Color::getColorFrom24BitRGB(51, 102, 153));
    AnalogButton.setText(TypedText(T_SINGLEUSEID2));
    AnalogButton.setTextPosition(35, 10, 180, 50);
    AnalogButton.setTextColors(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255), touchgfx::Color::getColorFrom24BitRGB(255, 0, 0));
    AnalogButton.setBitmaps(Bitmap(BITMAP_ANALOGICON_ID), Bitmap(BITMAP_ANALOGICON_ID));
    AnalogButton.setBitmapXY(121, 0);
    AnalogButton.setPosition(0, 0, 180, 50);
    AnalogButton.setAction(flexButtonCallback);
    AnalogContainer.add(AnalogButton);

    NumericContainer.setPosition(167, 192, 180, 55);

    NumericButton.setBoxWithBorderPosition(0, 0, 180, 50);
    NumericButton.setBorderSize(5);
    NumericButton.setBoxWithBorderColors(touchgfx::Color::getColorFrom24BitRGB(0, 102, 153), touchgfx::Color::getColorFrom24BitRGB(0, 153, 204), touchgfx::Color::getColorFrom24BitRGB(0, 51, 102), touchgfx::Color::getColorFrom24BitRGB(51, 102, 153));
    NumericButton.setText(TypedText(T_SINGLEUSEID3));
    NumericButton.setTextPosition(35, 10, 180, 50);
    NumericButton.setTextColors(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255), touchgfx::Color::getColorFrom24BitRGB(255, 0, 0));
    NumericButton.setBitmaps(Bitmap(BITMAP_BINARYICON_ID), Bitmap(BITMAP_BINARYICON_ID));
    NumericButton.setBitmapXY(124, 0);
    NumericButton.setPosition(0, 2, 180, 50);
    NumericButton.setAction(flexButtonCallback);
    NumericContainer.add(NumericButton);

    add(BackgroundContainer);
    add(TopBar);
    add(SpeechContainer);
    add(AnalogContainer);
    add(NumericContainer);
}

void HomeScreenViewBase::setupScreen()
{

}

void HomeScreenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &HomeButton)
    {
        //HomeInteraction
        //When HomeButton clicked change screen to HomeScreen
        //Go to HomeScreen with no screen transition
        application().gotoHomeScreenScreenNoTransition();
    }
    else if (&src == &SpeechButton)
    {
        //SpeechInteraction
        //When SpeechButton clicked change screen to Speech
        //Go to Speech with no screen transition
        application().gotoSpeechScreenNoTransition();
    }
    else if (&src == &AnalogButton)
    {
        //AnalogInteraction
        //When AnalogButton clicked change screen to Analog
        //Go to Analog with no screen transition
        application().gotoAnalogScreenNoTransition();
    }
    else if (&src == &NumericButton)
    {
        //NumericInteraction
        //When NumericButton clicked change screen to Numeric
        //Go to Numeric with no screen transition
        application().gotoNumericScreenNoTransition();
    }
}
