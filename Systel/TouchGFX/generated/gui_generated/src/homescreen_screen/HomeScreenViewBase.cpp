/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/homescreen_screen/HomeScreenViewBase.hpp>
#include "BitmapDatabase.hpp"
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>

HomeScreenViewBase::HomeScreenViewBase() :
    buttonCallback(this, &HomeScreenViewBase::buttonCallbackHandler)
{
    CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);

    BackgroundContainer.setPosition(0, 0, 480, 272);

    Background.setBitmap(Bitmap(BITMAP_WEBP_NET_RESIZEIMAGE_ID));
    Background.setPosition(0, 0, 480, 272);
    Background.setOffset(0, 0);
    BackgroundContainer.add(Background);

    Shadow_1.setPosition(0, 0, 480, 272);
    Shadow_1.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 9, 255));
    Shadow_1.setAlpha(48);
    BackgroundContainer.add(Shadow_1);

    line1.setPosition(0, 42, 480, 18);
    line1Painter.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    line1.setPainter(line1Painter);
    line1.setStart(0, 5);
    line1.setEnd(480, 5);
    line1.setLineWidth(3);
    line1.setLineEndingStyle(Line::BUTT_CAP_ENDING);
    line1.setAlpha(81);
    BackgroundContainer.add(line1);

    TopBar.setPosition(0, 0, 480, 50);

    supcom1.setXY(330, -9);
    supcom1.setBitmap(Bitmap(BITMAP_SUPCOM_ID));
    TopBar.add(supcom1);

    SpeechTextIcon.setXY(54, 143);
    SpeechTextIcon.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    SpeechTextIcon.setLinespacing(0);
    SpeechTextIcon.setAlpha(82);
    SpeechTextIcon.setTypedText(TypedText(T_SINGLEUSEID7));

    AnalogTextIcon.setXY(204, 143);
    AnalogTextIcon.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    AnalogTextIcon.setLinespacing(0);
    AnalogTextIcon.setAlpha(94);
    AnalogTextIcon.setTypedText(TypedText(T_SINGLEUSEID8));

    NumericIcon.setXY(330, 143);
    NumericIcon.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    NumericIcon.setLinespacing(0);
    NumericIcon.setAlpha(94);
    NumericIcon.setTypedText(TypedText(T_SINGLEUSEID9));

    SpeechButton.setXY(48, 76);
    SpeechButton.setBitmaps(Bitmap(BITMAP_DARK_BUTTONS_ROUND_ICON_BUTTON_ID), Bitmap(BITMAP_DARK_BUTTONS_ROUND_ICON_BUTTON_PRESSED_ID));
    SpeechButton.setAction(buttonCallback);
    SpeechButton.setAlpha(228);

    NumericButton.setXY(345, 76);
    NumericButton.setBitmaps(Bitmap(BITMAP_DARK_BUTTONS_ROUND_ICON_BUTTON_ID), Bitmap(BITMAP_DARK_BUTTONS_ROUND_ICON_BUTTON_PRESSED_ID));
    NumericButton.setAction(buttonCallback);

    AnalogButton.setXY(204, 76);
    AnalogButton.setBitmaps(Bitmap(BITMAP_DARK_BUTTONS_ROUND_ICON_BUTTON_ID), Bitmap(BITMAP_DARK_BUTTONS_ROUND_ICON_BUTTON_PRESSED_ID));
    AnalogButton.setAction(buttonCallback);
    AnalogButton.setAlpha(228);

    scalableImage1.setBitmap(Bitmap(BITMAP_SPEECHICON_ID));
    scalableImage1.setPosition(62, 88, 33, 36);
    scalableImage1.setScalingAlgorithm(ScalableImage::NEAREST_NEIGHBOR);
    scalableImage1.setAlpha(168);

    scalableImage1_1.setBitmap(Bitmap(BITMAP_BINARYICON_ID));
    scalableImage1_1.setPosition(358, 88, 35, 38);
    scalableImage1_1.setScalingAlgorithm(ScalableImage::NEAREST_NEIGHBOR);
    scalableImage1_1.setAlpha(168);

    scalableImage1_2.setBitmap(Bitmap(BITMAP_ANALOGICON_ID));
    scalableImage1_2.setPosition(217, 88, 34, 36);
    scalableImage1_2.setScalingAlgorithm(ScalableImage::NEAREST_NEIGHBOR);
    scalableImage1_2.setAlpha(168);

    add(BackgroundContainer);
    add(TopBar);
    add(SpeechTextIcon);
    add(AnalogTextIcon);
    add(NumericIcon);
    add(SpeechButton);
    add(NumericButton);
    add(AnalogButton);
    add(scalableImage1);
    add(scalableImage1_1);
    add(scalableImage1_2);
}

void HomeScreenViewBase::setupScreen()
{

}

void HomeScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &SpeechButton)
    {
        //SpeechInteraction
        //When SpeechButton clicked change screen to Speech
        //Go to Speech with no screen transition
        application().gotoSpeechScreenNoTransition();
    }
    else if (&src == &NumericButton)
    {
        //NumericInteraction
        //When NumericButton clicked change screen to Numeric
        //Go to Numeric with no screen transition
        application().gotoNumericScreenNoTransition();
    }
    else if (&src == &AnalogButton)
    {
        //AnalogInteraction
        //When AnalogButton clicked change screen to Analog
        //Go to Analog with no screen transition
        application().gotoAnalogScreenNoTransition();
    }
}
