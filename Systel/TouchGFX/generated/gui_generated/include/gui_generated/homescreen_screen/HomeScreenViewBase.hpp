/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef HOMESCREEN_VIEW_BASE_HPP
#define HOMESCREEN_VIEW_BASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/homescreen_screen/HomeScreenPresenter.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/TiledImage.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/canvas/Line.hpp>
#include <touchgfx/widgets/canvas/PainterRGB888.hpp>

#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
class HomeScreenViewBase : public touchgfx::View<HomeScreenPresenter>
{
public:
    HomeScreenViewBase();
    virtual ~HomeScreenViewBase() {}

    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Container BackgroundContainer;
    touchgfx::TiledImage Background;
    touchgfx::Box Shadow_1;
    touchgfx::Line line1;
    touchgfx::PainterRGB888 line1Painter;

    touchgfx::Container TopBar;
    touchgfx::Image supcom1;

    touchgfx::TextArea SpeechTextIcon;
    touchgfx::TextArea AnalogTextIcon;
    touchgfx::TextArea NumericIcon;
    touchgfx::Button SpeechButton;
    touchgfx::Button NumericButton;
    touchgfx::Button AnalogButton;
    touchgfx::ScalableImage scalableImage1;
    touchgfx::ScalableImage scalableImage1_1;
    touchgfx::ScalableImage scalableImage1_2;

private:

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

    /*
     * Callback Declarations
     */
    touchgfx::Callback<HomeScreenViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Canvas Buffer Size
     */
    static const uint16_t CANVAS_BUFFER_SIZE = 7200;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

};

#endif // HOMESCREEN_VIEW_BASE_HPP
